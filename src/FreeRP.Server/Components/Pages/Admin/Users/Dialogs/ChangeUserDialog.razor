@using FreeRP.User
@inject FreeRP.Localization.FrpLocalizationService i18n
@inject IDialogService dlg

<MudDialog>
    <DialogContent>
        @if (_user is not null)
        {
            <MudForm @bind-IsValid="_isValid">
                <MudTextField @bind-Value="_user.Email" ReadOnly="ReadOnly" InputType="InputType.Email" Label="@i18n.Text.Email"
                              Required="true" RequiredError="@i18n.Text.XIsRequired.Replace("{0}", i18n.Text.Email)" />

                <MudTextField @bind-Value="_user.FirstName" ReadOnly="ReadOnly" InputType="InputType.Text" Label="@i18n.Text.FirstName" />
                <MudTextField @bind-Value="_user.LastName" ReadOnly="ReadOnly" InputType="InputType.Text" Label="@i18n.Text.Lastname" />
                <MudTextField @bind-Value="_user.Phone" ReadOnly="ReadOnly" InputType="InputType.Telephone" Label="@i18n.Text.Phone" />
                <MudSelect @bind-Value="_user.Language" Label="@i18n.Text.Language">
                    @foreach (var item in Localization.FrpLocalizationService.GetSupportedLanguages())
                    {
                        <MudSelectItem Value="@item">@item</MudSelectItem>
                    }
                </MudSelect>
                <MudSelect @bind-Value="_user.Theme.DarkMode" Label="@i18n.Text.Theme">
                    <MudSelectItem Value="false">@i18n.Text.ThemeLight</MudSelectItem>
                    <MudSelectItem Value="true">@i18n.Text.ThemeDark</MudSelectItem>
                </MudSelect>
                <MudTextField @bind-Value="_user.Note" ReadOnly="ReadOnly" InputType="InputType.Text" Label="@i18n.Text.Note" Lines="3" />

                @if (NewUser)
                {
                    <MudTextField @bind-Value="_pass1" InputType="InputType.Password" Label="@i18n.Text.Password"
                                  Required="true" RequiredError="@i18n.Text.XIsRequired.Replace("{0}", i18n.Text.Password)" />

                    <MudTextField @bind-Value="_pass2" InputType="InputType.Password" Label="@i18n.Text.RepeatPassword"
                                  Required="true" RequiredError="@i18n.Text.XIsRequired.Replace("{0}", i18n.Text.Password)" />

                    <MudCheckBox @bind-Value="_user.IsLock" Label="@i18n.Text.IsLocked"></MudCheckBox>
                }
                else if (IsAdmin)
                {
                    <MudCheckBox @bind-Value="_user.IsLock" ReadOnly="ReadOnly" Label="@i18n.Text.IsLocked"></MudCheckBox>
                }
            </MudForm>
        }
    </DialogContent>
    <DialogActions>
        @if (ReadOnly == false)
        {
            <MudButton OnClick="Cancel">@i18n.Text.Cancel</MudButton>
            <MudButton Disabled="(_isValid == false)" Color="Color.Primary" OnClick="Save">@i18n.Text.Ok</MudButton>
        }
        else
        {
            <MudButton OnClick="Cancel">@i18n.Text.Close</MudButton>
        }
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    public MudDialogInstance Dialog { get; set; } = default!;

    [Parameter]
    public FrpUser Content { get; set; } = default!;

    [Parameter]
    public bool NewUser { get; set; }

    [Parameter]
    public bool IsAdmin { get; set; }

    [Parameter]
    public bool ReadOnly { get; set; }

    private FrpUser? _user = null;
    private bool _isValid = false;
    private string? _pass1;
    private string? _pass2;

    protected override void OnParametersSet()
    {
        if (_user == null)
        {
            _user = Content.Clone();
        }
    }

    void Cancel() => Dialog.Cancel();

    private async Task Save()
    {
        if (NewUser)
        {
            if (_pass1 != _pass2)
            {
                await dlg.ShowMessageBox(i18n.Text.Error, i18n.Text.PasswordNotMatch, i18n.Text.Ok);
                return;
            }
            else if (_user is not null)
                _user.Password = _pass1;
        }
            
        Content.MergeFrom(_user);
        Dialog.Close();
    }
}
